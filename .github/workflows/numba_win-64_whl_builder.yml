name: numba_win-64_wheel_builder

on:
  pull_request:
    paths:
      - .github/workflows/numba_win-64_whl_builder.yml
  workflow_dispatch:
    inputs:
      llvmlite_run_id:
        description: 'llvmlite workflow run ID (optional)'
        required: false
        type: string

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  LOCAL_LLVMLITE_ARTIFACT_PATH: D:/a/numba/numba/llvmlite_wheels
  CONDA_CHANNEL_NUMBA: numba/label/win64_wheel
  VALIDATION_PYTHON_VERSION: "3.12"
  ARTIFACT_RETENTION_DAYS: 7
  FALLBACK_LLVMLITE_VERSION: "15"

jobs:
  win-64-build:
    name: win-64-build
    runs-on: windows-2019
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          conda-remove-defaults: true
          auto-update-conda: true
          auto-activate-base: true

      - name: Download llvmlite Artifact
        if: ${{ inputs.llvmlite_run_id != '' }}
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-win-64-py${{ matrix.python-version }}
          path: llvmlite_wheels
          run-id: ${{ inputs.llvmlite_run_id }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install build dependencies
        run: |
          set -x
          if [ "${{ inputs.llvmlite_run_id }}" != "" ]; then
              CHAN="file:///${{ env.LOCAL_LLVMLITE_ARTIFACT_PATH }}"
          else
              CHAN="${{ env.CONDA_CHANNEL_NUMBA }}"
          fi
          conda install -c "$CHAN" llvmlite>=0.45.0 numpy setuptools tbb-devel python-build

      - name: Build wheel
        run: python -m build

      - name: Upload numba wheel
        uses: actions/upload-artifact@v4
        with:
          name: numba-win-64-py${{ matrix.python-version }}
          path: dist/*.whl
          compression-level: 0
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: error

  win-64-test:
    name: win-64-test
    needs: win-64-build
    runs-on: windows-2019
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download numba wheel
        uses: actions/download-artifact@v4
        with:
          name: numba-win-64-py${{ matrix.python-version }}
          path: dist

      - name: Install and test
        run: |
          pip install numpy
          pip install dist/*.whl
          python -m numba.runtests -v