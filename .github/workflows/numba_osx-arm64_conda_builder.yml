name: numba_osx-arm64_conda_builder

on:
  pull_request:
    paths:
      - .github/workflows/numba_osx-arm64_conda_builder.yml
      - buildscripts/condarecipe.local/**
  workflow_dispatch:
    inputs:
      llvmlite_run_id:
        description: 'llvmlite workflow run ID (optional)'
        required: false
        type: string

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CONDA_CHANNEL_NUMBA: numba/label/dev
  XCODE_SDK_PATH: /Applications/Xcode_15.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
  CONDA_CHANNEL_DIR: conda_channel_dir

jobs:
  osx-arm64-build-conda:
    name: osx-arm64-build-conda (py ${{ matrix.python-version }}, np ${{ matrix.numpy_build }})
    runs-on: macos-13
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            numpy_build: "2.0"
          - python-version: "3.11"
            numpy_build: "2.0"
          - python-version: "3.12"
            numpy_build: "2.0"
          - python-version: "3.13"
            numpy_build: "2.1"
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: Download llvmlite Artifact
        if: ${{ inputs.llvmlite_run_id != '' }}
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-osx-arm64-py${{ matrix.python-version }}
          path: llvmlite_conda
          run-id: ${{ inputs.llvmlite_run_id }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install conda-build
        run: conda install conda-build

      - name: Configure build environment
        run: |
          # Set compiler paths
          echo "CC=$(xcrun --sdk macosx clang)" >> $GITHUB_ENV
          echo "CXX=$(xcrun --sdk macosx clang++)" >> $GITHUB_ENV
          
          # Set architecture and SDK flags
          echo "CFLAGS=-arch arm64 -isysroot ${{ env.XCODE_SDK_PATH }}" >> $GITHUB_ENV
          echo "CXXFLAGS=-arch arm64 -isysroot ${{ env.XCODE_SDK_PATH }}" >> $GITHUB_ENV

      - name: Build Numba conda package
        run: |
          mkdir -p ${{ env.CONDA_CHANNEL_DIR }}

          # Determine llvmlite channel
          if [ "${{ inputs.llvmlite_run_id }}" != "" ]; then
            LLVMLITE_CHANNEL="file://${{ github.workspace }}/llvmlite_conda"
          else
            LLVMLITE_CHANNEL="${{ env.CONDA_CHANNEL_NUMBA }}"
          fi

          conda build --debug \
            -c $LLVMLITE_CHANNEL \
            -c defaults \
            --python=${{ matrix.python-version }} \
            --numpy=${{ matrix.numpy_build }} \
            blas=*=openblas \
            buildscripts/condarecipe.local/ \
            --output-folder=${{ env.CONDA_CHANNEL_DIR }} \
            --no-test

      - name: Upload numba conda package
        uses: actions/upload-artifact@v4
        with:
          name: numba_osx-arm64_conda_py${{ matrix.python-version }}
          path: ${{ env.CONDA_CHANNEL_DIR }}
          compression-level: 0
          retention-days: 7
          if-no-files-found: error

  osx-arm64-test:
    name: osx-arm64-test-conda (py ${{ matrix.python-version }}, np ${{ matrix.numpy_test }})
    needs: osx-arm64-build-conda
    runs-on: macos-13
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include:
          # Python 3.10
          - python-version: "3.10"
            numpy_test: "1.24"
          - python-version: "3.10"
            numpy_test: "1.25"

          # Python 3.11
          - python-version: "3.11"
            numpy_test: "1.26"
          - python-version: "3.11"
            numpy_test: "2.0"
          - python-version: "3.11"
            numpy_test: "2.2"

          # Python 3.12
          - python-version: "3.12"
            numpy_test: "1.26"
          - python-version: "3.12"
            numpy_test: "2.0"
          - python-version: "3.12"
            numpy_test: "2.2"

          # Python 3.13
          - python-version: "3.13"
            numpy_test: "2.2"
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: Download llvmlite artifact
        if: ${{ inputs.llvmlite_run_id != '' }}
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-osx-arm64-py${{ matrix.python-version }}
          path: llvmlite_conda
          run-id: ${{ inputs.llvmlite_run_id }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download numba artifact
        uses: actions/download-artifact@v4
        with:
          name: numba_osx-arm64_conda_py${{ matrix.python-version }}

      - name: Install conda-build
        run: conda install conda-build

      - name: Run tests
        env:
          TESTS_TO_RUN: "numba.tests"
          NUMBA_ENABLE_CUDASIM: 1
        run: |
          # Determine llvmlite channel
          if [ "${{ inputs.llvmlite_run_id }}" != "" ]; then
            LLVMLITE_CHANNEL="file://${{ github.workspace }}/llvmlite_conda"
          else
            LLVMLITE_CHANNEL="${{ env.CONDA_CHANNEL_NUMBA }}"
          fi

          conda build \
            -c $LLVMLITE_CHANNEL \
            -c defaults \
            --extra-deps numpy=${{ matrix.numpy_test }} \
            blas=*=openblas \
            --test \
            osx-arm64/numba*.conda
