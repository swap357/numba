name: numba_linux-64_wheel_builder

on:
  pull_request:
    paths:
    - .github/workflows/numba_linux-64_wheel_builder.yml
  workflow_dispatch:
    inputs:
      llvmlite_wheel_runid:
        description: 'llvmlite wheel workflow run ID (optional)'
        required: false
        type: string
      use_tbb:
        description: 'use TBB (Threading Building Blocks)'
        required: false
        type: boolean
        default: true

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  ARTIFACT_RETENTION_DAYS: 7
  WHEELS_INDEX_URL: https://pypi.anaconda.org/numba/label/dev/simple
  CONDA_CHANNEL_NUMBA: numba/label/dev
  USE_TBB: ${{ inputs.use_tbb != false }}

jobs:
  linux-64-build:
    name: linux-64-build-wheel (py ${{ matrix.python-version }}, np ${{ matrix.numpy_build }})
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            numpy_build: "2.0.2"
          - python-version: "3.11"
            numpy_build: "2.0.2"
          - python-version: "3.12"
            numpy_build: "2.0.2"
          - python-version: "3.13"
            numpy_build: "2.1.3"
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}

      - name: Set Python Path
        run: |
          PYTHON_PATH=$(which python${{ matrix.python-version }})
          echo "PYTHON_PATH=$PYTHON_PATH" >> $GITHUB_ENV

      - name: Download llvmlite wheel
        if: inputs.llvmlite_wheel_runid != ''
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-linux-64-py${{ matrix.python-version }}
          path: llvmlite_wheels
          run-id: ${{ inputs.llvmlite_wheel_runid }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install build dependencies
        run: |
          if [ "${{ inputs.llvmlite_wheel_runid }}" != "" ]; then
              $PYTHON_PATH -m pip install llvmlite_wheels/*.whl
          else
              $PYTHON_PATH -m pip install -i $WHEELS_INDEX_URL llvmlite
          fi
          $PYTHON_PATH -m pip install build numpy==${{ matrix.numpy_build }} auditwheel setuptools wheel patchelf

          # Install TBB if enabled
          if [ "$USE_TBB" = "true" ]; then
              $PYTHON_PATH -m pip install tbb==2021.6 tbb-devel==2021.6
          fi

      - name: Build sdist [once - py3.10]
        if: matrix.python-version == '3.10'
        run: $PYTHON_PATH -m build --sdist

      - name: Build wheel
        run: $PYTHON_PATH -m build

      - name: Fix linux wheel with auditwheel
        run: |
          cd dist
          LD_LIBRARY_PATH=$(dirname $PYTHON_PATH)/lib:$LD_LIBRARY_PATH $PYTHON_PATH -m auditwheel repair --plat manylinux_2_17_x86_64 ./*.whl
          cd wheelhouse
          ls -la

          # Use the patching script
          chmod +x $GITHUB_WORKSPACE/buildscripts/github/patch_wheel_linux-64.sh
          $GITHUB_WORKSPACE/buildscripts/github/patch_wheel_linux-64.sh $(ls -1 *.whl | head -1) $PYTHON_PATH $USE_TBB
          cd ..

      - name: Upload numba wheel
        uses: actions/upload-artifact@v4
        with:
          name: numba-linux-64-py${{ matrix.python-version }}-np${{ matrix.numpy_build }}${{ env.USE_TBB == 'true' && '-tbb' || '' }}
          path: dist/*.whl
          compression-level: 0
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: error

      - name: Upload numba sdist
        if: matrix.python-version == '3.10'
        uses: actions/upload-artifact@v4
        with:
            name: numba-sdist
            path: dist/*.tar.gz
            compression-level: 0
            retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
            if-no-files-found: error

  linux-64-test:
    name: linux-64-test (py ${{ matrix.python-version }}, np ${{ matrix.numpy_build }})
    needs: linux-64-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            numpy_build: "2.0.2"
          - python-version: "3.11"
            numpy_build: "2.0.2"
          - python-version: "3.12"
            numpy_build: "2.0.2"
          - python-version: "3.13"
            numpy_build: "2.1.3"
      fail-fast: false

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download Numba wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: numba-linux-64-py${{ matrix.python-version }}-np${{ matrix.numpy_build }}
          path: dist

      - name: Download llvmlite wheel
        if: inputs.llvmlite_wheel_runid != ''
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-linux-64-py${{ matrix.python-version }}
          path: llvmlite_wheels
          run-id: ${{ inputs.llvmlite_wheel_runid }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate and test wheel
        run: |
          PYTHON_PATH=$(which python${{ matrix.python-version }})
          $PYTHON_PATH -m pip install --upgrade pip twine
          ls -l dist
          if [ "${{ inputs.llvmlite_wheel_runid }}" != "" ]; then
              $PYTHON_PATH -m pip install llvmlite_wheels/*.whl
          else
              $PYTHON_PATH -m pip install -i $WHEELS_INDEX_URL llvmlite
          fi
          $PYTHON_PATH -m twine check dist/*.whl
          $PYTHON_PATH -m pip install dist/numba*.whl numpy==${{ matrix.numpy_build }}

          # print Numba system information
          $PYTHON_PATH -m numba -s

          # run tests
          $PYTHON_PATH -m numba.runtests -m 4 -v
