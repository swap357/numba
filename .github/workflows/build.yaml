name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v4
      - name: Build SDist
        run: |
          python3.10 -m pip install numpy==2.0.0
          python3.10 setup.py sdist
          ls dist/
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python }} with NumPy ${{ matrix.numpy }} ${{ matrix.tbb && 'with TBB' || '' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64 (with TBB)
          - os: ubuntu-latest
            python: '3.10'
            platform: manylinux2014_x86_64
            numpy: '2.0.0'
            tbb: true
          - os: ubuntu-latest
            python: '3.10'
            platform: manylinux2014_x86_64
            numpy: '2.1.3'
            tbb: true
          - os: ubuntu-latest
            python: '3.11'
            platform: manylinux2014_x86_64
            numpy: '2.0.0'
            tbb: true
          - os: ubuntu-latest
            python: '3.11'
            platform: manylinux2014_x86_64
            numpy: '2.1.3'
            tbb: true
          - os: ubuntu-latest
            python: '3.12'
            platform: manylinux2014_x86_64
            numpy: '2.0.0'
            tbb: true
          - os: ubuntu-latest
            python: '3.12'
            platform: manylinux2014_x86_64
            numpy: '2.1.3'
            tbb: true
            
          # macOS x86_64 (no TBB)
          - os: macos-latest
            python: '3.10'
            numpy: '2.0.0'
            tbb: false
          - os: macos-latest
            python: '3.10'
            numpy: '2.1.3'
            tbb: false
          - os: macos-latest
            python: '3.11'
            numpy: '2.0.0'
            tbb: false
          - os: macos-latest
            python: '3.11'
            numpy: '2.1.3'
            tbb: false
          - os: macos-latest
            python: '3.12'
            numpy: '2.0.0'
            tbb: false
          - os: macos-latest
            python: '3.12'
            numpy: '2.1.3'
            tbb: false
            
          # Windows x64 (with TBB)
          - os: windows-latest
            python: '3.10'
            numpy: '2.0.0'
            tbb: true
          - os: windows-latest
            python: '3.10'
            numpy: '2.1.3'
            tbb: true
          - os: windows-latest
            python: '3.11'
            numpy: '2.0.0'
            tbb: true
          - os: windows-latest
            python: '3.11'
            numpy: '2.1.3'
            tbb: true
          - os: windows-latest
            python: '3.12'
            numpy: '2.0.0'
            tbb: true
          - os: windows-latest
            python: '3.12'
            numpy: '2.1.3'
            tbb: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools twine numpy==${{ matrix.numpy }}
          ${{ matrix.tbb && 'pip install tbb==2021.6 tbb-devel==2021.6' || '' }}
          
      # Linux-specific setup
      - name: Setup Linux build environment
        if: runner.os == 'Linux'
        uses: docker://quay.io/pypa/manylinux2014_x86_64
        with:
          args: |
            bash ./buildscripts/manylinux_2_17/build_llvmlite.sh \
            https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh \
            cp${{ matrix.python }}-cp${{ matrix.python }}

      # macOS-specific setup
      - name: Setup macOS build environment
        if: runner.os == 'macOS'
        run: |
          brew install llvm@14
          export LLVM_CONFIG=$(brew --prefix llvm@14)/bin/llvm-config
          echo "LLVM_CONFIG=$(brew --prefix llvm@14)/bin/llvm-config" >> $GITHUB_ENV

      # Windows-specific setup
      - name: Setup Windows build environment
        if: runner.os == 'Windows'
        run: |
          choco uninstall llvm -y
          choco install llvm --version=14.0.6 --force -y
          echo "LLVM_CONFIG=C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_ENV -Append
          if (!(Test-Path "C:\Program Files\LLVM\bin")) {
            Write-Error "LLVM installation not found"
            exit 1
          }

      - name: Build wheel
        run: python setup.py bdist_wheel

      # macOS wheel fixing
      - name: Fix macOS wheel
        if: runner.os == 'macOS'
        run: |
          pip install delocate
          delocate-wheel -v dist/*.whl

      # Linux wheel fixing
      - name: Fix Linux wheel
        if: runner.os == 'Linux'
        run: |
          pip install auditwheel
          cd dist
          auditwheel repair *.whl
          cd wheelhouse
          
          # Fix TBB and OpenMP paths if needed
          if [ -d "numba.libs" ]; then
            cd numba.libs
            LIBTBB=$(compgen -W libtbb*)
            LIBOMP=$(compgen -W libgomp*)
            cd ..
            
            if [ "${{ matrix.tbb }}" = "true" ] && [ -n "$LIBTBB" ]; then
              TBBEXT=$(echo "$LIBTBB" | grep -oP "(\.so.*)")
              patchelf numba/np/ufunc/tbbpool*.so --replace-needed $LIBTBB libtbb$TBBEXT
              patchelf numba/np/ufunc/tbbpool*.so --remove-rpath
            fi
            
            if [ -n "$LIBOMP" ]; then
              OMPEXT=$(echo "$LIBOMP" | grep -oP "(\.so.*)")
              patchelf numba/np/ufunc/omppool*.so --replace-needed $LIBOMP libgomp$OMPEXT
              patchelf numba/np/ufunc/omppool*.so --remove-rpath
            fi
          fi

      - name: Check wheel
        run: |
          twine check dist/*.whl
          pip install dist/*.whl
          python -m numba -s

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python }}${{ matrix.tbb && '-tbb' || '' }}
          path: dist/*.whl
