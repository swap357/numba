name: numba_win-64_conda_builder

on:
  pull_request:
    paths:
      - .github/workflows/numba_win-64_conda_builder.yml
      - buildscripts/condarecipe.local/**
      - .github/workflows/conda_workflow_matrix.json
  workflow_dispatch:

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CONDA_CHANNEL_NUMBA: numba/label/dev

jobs:
  load-matrix:
    runs-on: ubuntu-latest
    outputs:
      build-matrix-json: ${{ steps.parse_matrix.outputs.build-matrix-json }}
      test-matrix-json: ${{ steps.parse_matrix.outputs.test-matrix-json }}
    steps:
      - uses: actions/checkout@v4
      - id: parse_matrix
        name: Parse Workflow Matrix JSON
        run: |
          # Limit to Python 3.12 + NumPy 2.2 for debugging Windows test failures (issue #10177)
          BUILD_JSON='[{"python-version": "3.12", "numpy_build": "2.0"}]'
          TEST_JSON='[{"python-version": "3.12", "numpy_test": "2.2"}]'
          echo "Build Matrix JSON: $BUILD_JSON"
          echo "Test Matrix JSON: $TEST_JSON"
          echo "build-matrix-json=$BUILD_JSON" >> $GITHUB_OUTPUT
          echo "test-matrix-json=$TEST_JSON" >> $GITHUB_OUTPUT

  win-64-build-conda:
    name: win-64-build-conda (py ${{ matrix.python-version }}, np ${{ matrix.numpy_build }})
    needs: load-matrix
    runs-on: windows-2025
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include: ${{ fromJson(needs.load-matrix.outputs.build-matrix-json) }}
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""



      - name: Install conda-build
        run: conda install conda-build

      - name: Build Numba conda package
        run: |
          CONDA_CHANNEL_DIR="conda_channel_dir"
          mkdir -p $CONDA_CHANNEL_DIR

          LLVMLITE_CHANNEL="${{ env.CONDA_CHANNEL_NUMBA }}"

          conda build --debug -c $LLVMLITE_CHANNEL -c defaults \
            --python=${{ matrix.python-version }} \
            --numpy=${{ matrix.numpy_build }} \
            buildscripts/condarecipe.local/ \
            --output-folder=$CONDA_CHANNEL_DIR \
            --no-test

      - name: Upload numba conda package
        uses: actions/upload-artifact@v4
        with:
          name: numba_win-64_conda_py${{ matrix.python-version }}
          path: conda_channel_dir
          compression-level: 0
          retention-days: 7
          if-no-files-found: error

  win-64-test:
    name: win-64-test-conda (py ${{ matrix.python-version }}, np ${{ matrix.numpy_test }})
    needs: [load-matrix, win-64-build-conda]
    runs-on: windows-2025
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include: ${{ fromJson(needs.load-matrix.outputs.test-matrix-json) }}
      fail-fast: false

    steps:
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v3



      - name: Download numba artifact
        uses: actions/download-artifact@v4
        with:
          name: numba_win-64_conda_py${{ matrix.python-version }}

      - name: Install conda-build
        run: |
          conda install conda-build

      - name: Run specific failing tests for debugging (issue #10177)
        env:
          # Target specific tests that are failing on Windows runners
          TESTS_TO_RUN: "numba.tests.test_num_threads::TestNumThreadsBackends::test_threadmask_across_fork_workqueue_2_threads numba.tests.test_runtests::TestCase::test_include_exclude_tags numba.tests.test_parallel_backend::TestSpecificBackend::test_threading_concurrent_guvectorize_omp numba.tests.test_parallel_backend::TestThreadingLayerPriority::test_omp numba.tests.test_num_threads::TestNumThreadsBackends::test_set_num_threads_outside_jit_omp_4_threads numba.tests.test_parallel_backend::TestSpecificBackend::test_multiprocessing_spawn_concurrent_jit_workqueue numba.tests.test_num_threads::TestNumThreadsBackends::test_get_num_threads_truth_outside_jit_omp_2_threads"
          NUMBA_ENABLE_CUDASIM: 1
        run: |
          LLVMLITE_CHANNEL="${{ env.CONDA_CHANNEL_NUMBA }}"

          conda build -c $LLVMLITE_CHANNEL -c defaults \
            --extra-deps numpy=${{ matrix.numpy_test }} \
            --test \
            win-64/numba*.conda
