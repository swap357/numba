name: numba_osx-64_wheel_builder

on:
  pull_request:
    paths:
    - .github/workflows/numba_osx-64_wheel_builder.yml
  workflow_dispatch:
    inputs:
      llvmlite_wheel_runid:
        description: 'llvmlite wheel workflow run ID (optional)'
        required: false
        type: string

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  ARTIFACT_RETENTION_DAYS: 7
  WHEELS_INDEX_URL: https://pypi.anaconda.org/numba/label/osx-temp-wheel/simple

jobs:
  osx-64-build:
    name: osx-64-build-wheel (py ${{ matrix.python-version }}, np ${{ matrix.numpy_build }})
    runs-on: macos-13
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            numpy_build: "2.0.2"
          - python-version: "3.11"
            numpy_build: "2.0.2"
          - python-version: "3.12"
            numpy_build: "2.0.2"
          - python-version: "3.13"
            numpy_build: "2.1.3"
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set Python Path
        run: echo "PYTHON_PATH=$(which python${{ matrix.python-version }})" >> $GITHUB_ENV
  
      - name: Download llvmlite wheel
        if: inputs.llvmlite_wheel_runid != ''
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-osx-64-py${{ matrix.python-version }}
          path: llvmlite_wheels
          run-id: ${{ inputs.llvmlite_wheel_runid }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install build dependencies
        run: |
          if [ "${{ inputs.llvmlite_wheel_runid }}" != "" ]; then
              $PYTHON_PATH -m pip install llvmlite_wheels/*.whl
          else
              $PYTHON_PATH -m pip install -i $WHEELS_INDEX_URL llvmlite
          fi
          $PYTHON_PATH -m pip install setuptools build numpy==${{ matrix.numpy_build }} wheel

      - name: Build sdist [once - py3.10]
        if: matrix.python-version == '3.10'
        run: $PYTHON_PATH -m build --sdist

      - name: Build wheel
        run: $PYTHON_PATH -m build

      - name: Fix macOS wheel library paths
        run: |
          cd dist
          chmod +x ../buildscripts/github/patch_wheel_dylib.py
          $PYTHON_PATH ../buildscripts/github/patch_wheel_dylib.py ./*.whl
          ls -la ./*.whl

      - name: Upload numba wheel
        uses: actions/upload-artifact@v4
        with:
          name: numba-osx-64-py${{ matrix.python-version }}-np${{ matrix.numpy_build }}
          path: dist/*.whl
          compression-level: 0
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: error

      - name: Upload numba sdist
        if: matrix.python-version == '3.10'
        uses: actions/upload-artifact@v4
        with:
            name: numba-sdist
            path: dist/*.tar.gz
            compression-level: 0
            retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
            if-no-files-found: error

  osx-64-validate-wheel:
    name: osx-64-validate-wheel (py ${{ matrix.python-version }}, np ${{ matrix.numpy_build }})
    needs: osx-64-build
    runs-on: macos-13
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            numpy_build: "2.0.2"
          - python-version: "3.11"
            numpy_build: "2.0.2"
          - python-version: "3.12"
            numpy_build: "2.0.2"
          - python-version: "3.13"
            numpy_build: "2.1.3"
      fail-fast: false

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download Numba wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: numba-osx-64-py${{ matrix.python-version }}-np${{ matrix.numpy_build }}
          path: dist

      - name: Download llvmlite wheel
        if: inputs.llvmlite_wheel_runid != ''
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-osx-64-py${{ matrix.python-version }}
          path: llvmlite_wheels
          run-id: ${{ inputs.llvmlite_wheel_runid }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate and smoke test wheel
        run: |
          PYTHON_PATH=$(which python${{ matrix.python-version }})
          $PYTHON_PATH -m pip install --upgrade pip twine
          ls -l dist

          if [ "${{ inputs.llvmlite_wheel_runid }}" != "" ]; then
              $PYTHON_PATH -m pip install llvmlite_wheels/*.whl
          else
              $PYTHON_PATH -m pip install -i $WHEELS_INDEX_URL llvmlite
          fi

          $PYTHON_PATH -m twine check dist/*.whl
          NUMPY_VERSION="${{ matrix.numpy_build }}"
          $PYTHON_PATH -m pip install dist/numba*.whl numpy==$NUMPY_VERSION
          $PYTHON_PATH -m numba -s
